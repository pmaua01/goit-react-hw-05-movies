{"version":3,"file":"static/js/570.388e979e.chunk.js","mappings":"qRAOaA,EAAc,WAAO,IAAD,IAC/B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAGjBC,QAAQC,IAAI,mBAAoBH,IAEhCI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,IAAIC,gBADT,wCAEd,oIAE2BC,EAAAA,EAAAA,IAAeT,EAAIO,GAF9C,OAEUG,EAFV,OAGIN,QAAQC,IAAI,iBAAkBK,GAE5BC,EAOED,EAPFC,YACAC,EAMEF,EANFE,MACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,SACAC,EAGEL,EAHFK,aACAC,EAEEN,EAFFM,OACAC,EACEP,EADFO,aAEIC,EAAuBC,OAAOJ,GAAcK,MAAM,EAAG,GACrDC,EAAsBC,OAAOT,GAAYU,UACzCC,EAAwBF,OAAOL,GAAcM,UAC7CE,EAAiBT,EAAOU,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAC5DhC,EAAc,CACZc,YAAAA,EACAC,MAAAA,EACAE,SAAAA,EACAI,qBAAAA,EACAG,oBAAAA,EACAI,eAAAA,EACAD,sBAAAA,IAxBN,kDA2BIpB,QAAQC,IAAI,iBAAkB,KAAMK,SAASoB,QAC7C/B,EAAS,KAAMW,SAASoB,QA5B5B,2DAFc,sBAkCd,OAlCc,mCAiCdC,GACO,WACLxB,EAAWyB,OACZ,CACF,GAAE,CAAChC,IAEJ,IACEW,EAMEf,EANFe,YACAC,EAKEhB,EALFgB,MACAE,EAIElB,EAJFkB,SACAI,EAGEtB,EAHFsB,qBACAO,EAEE7B,EAFF6B,eACAD,EACE5B,EADF4B,sBAGIS,EAAQ,oBAAG/B,EAASgC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAGzC,OAFA/B,QAAQC,IAAI,QAASP,GAEP,MAAVA,GAEA,iCACE,SAAC,KAAD,CAAMsC,GAAIH,EAAV,UACE,mBAAQI,KAAK,SAAb,wBAEF,2DAKNjC,QAAQC,IAAI,WAAY4B,IAEtB,6BACE,SAAC,KAAD,CAAMG,GAAIH,EAAV,UACE,mBAAQK,UAAWC,EAAAA,EAAAA,aAAkBF,KAAK,SAA1C,wBAIF,iBAAKC,UAAWC,EAAAA,EAAAA,SAAhB,WACE,gBACEC,IAAG,0CAAqC7B,GACxC8B,IAAI,GACJC,MAAM,SAER,iBAAKJ,UAAWC,EAAAA,EAAAA,aAAhB,WACE,0BACG3B,EADH,IACWM,EADX,QAGA,eAAGoB,UAAWC,EAAAA,EAAAA,KAAd,wBAA4D,GAAxBf,EAApC,QACA,sCACA,cAAGc,UAAWC,EAAAA,EAAAA,KAAd,SAAyBzB,KACzB,oCACA,cAAGwB,UAAWC,EAAAA,EAAAA,KAAd,SAAyBd,WAG7B,iBAAKa,UAAWC,EAAAA,EAAAA,UAAhB,WACE,cAAGD,UAAWC,EAAAA,EAAAA,cAAd,oCACA,gBAAID,UAAWC,EAAAA,EAAAA,cAAf,WACE,yBACE,SAAC,KAAD,CAAMH,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMG,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAlC,8BAMN,SAAC,EAAAU,SAAD,WACE,SAAC,KAAD,SAIP,C","sources":["pages/MovieDetail.jsx"],"sourcesContent":["import { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { apiMovieDetail } from 'helpers/Api';\nimport { useState, useEffect, Suspense } from 'react';\n// import { Aditional } from './Aditional';\n\nimport css from '../components/main.module.css';\n\nexport const MovieDetail = () => {\n  const [filmDetail, setFilmDetail] = useState([]);\n  const [error, setError] = useState(null);\n  // const isFirstRender = useRef(null);\n  const { id } = useParams();\n  const location = useLocation();\n\n  // console.log(isFirstRender);\n  console.log('location on hook', location);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    async function fetchFilmDetail() {\n      try {\n        const response = await apiMovieDetail(id, controller);\n        console.log('apiMovieDetail', response);\n        const {\n          poster_path,\n          title,\n          popularity,\n          overview,\n          release_date,\n          genres,\n          vote_average,\n        } = response;\n        const normilizeReleaseData = String(release_date).slice(0, 4);\n        const normilizePopularity = Number(popularity).toFixed();\n        const normilizedVoteAverage = Number(vote_average).toFixed();\n        const normilizeGenre = genres.map(genre => genre.name).join(' ');\n        setFilmDetail({\n          poster_path,\n          title,\n          overview,\n          normilizeReleaseData,\n          normilizePopularity,\n          normilizeGenre,\n          normilizedVoteAverage,\n        });\n      } catch (error) {\n        console.log('Error on catch', error.response.status);\n        setError(error.response.status);\n      }\n    }\n    fetchFilmDetail();\n    return () => {\n      controller.abort();\n    };\n  }, [id]);\n\n  const {\n    poster_path,\n    title,\n    overview,\n    normilizeReleaseData,\n    normilizeGenre,\n    normilizedVoteAverage,\n  } = filmDetail;\n\n  const fromHref = location.state?.from ?? '/';\n  console.log('error', error);\n\n  if (error === 404) {\n    return (\n      <>\n        <Link to={fromHref}>\n          <button type=\"button\">Go back</button>\n        </Link>\n        <div>Opps, try again later....</div>\n      </>\n    );\n  }\n\n  console.log('fromHref', fromHref);\n  return (\n    <main>\n      <Link to={fromHref}>\n        <button className={css.detailButton} type=\"button\">\n          Go back\n        </button>\n      </Link>\n      <div className={css.filmInfo}>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt=\"\"\n          width=\"300\"\n        />\n        <div className={css.filmInfoText}>\n          <h1>\n            {title}({normilizeReleaseData})\n          </h1>\n          <p className={css.text}>User score:{normilizedVoteAverage * 10}%</p>\n          <h2>Overview</h2>\n          <p className={css.text}>{overview}</p>\n          <h2>Genres</h2>\n          <p className={css.text}>{normilizeGenre}</p>\n        </div>\n      </div>\n      <div className={css.aditional}>\n        <p className={css.textAditional}>Aditional information</p>\n        <ul className={css.aditionalList}>\n          <li>\n            <Link to=\"cast\" state={{ from: fromHref }}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link to=\"reviews\" state={{ from: fromHref }}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n"],"names":["MovieDetail","useState","filmDetail","setFilmDetail","error","setError","id","useParams","location","useLocation","console","log","useEffect","controller","AbortController","apiMovieDetail","response","poster_path","title","popularity","overview","release_date","genres","vote_average","normilizeReleaseData","String","slice","normilizePopularity","Number","toFixed","normilizedVoteAverage","normilizeGenre","map","genre","name","join","status","fetchFilmDetail","abort","fromHref","state","from","to","type","className","css","src","alt","width","Suspense"],"sourceRoot":""}